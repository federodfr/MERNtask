{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\src\\\\components\\\\auth\\\\NuevaCuenta.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst NuevaCuenta = props => {\n  // extraer los valores del context\n  const alertaContext = useContext(AlertaContext);\n  const alerta = alertaContext.alerta,\n        mostrarAlerta = alertaContext.mostrarAlerta;\n  const authContext = useContext(AuthContext);\n  const mensaje = authContext.mensaje,\n        autenticado = authContext.autenticado,\n        registrarUsuario = authContext.registrarUsuario; // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\n\n  useEffect(() => {\n    if (autenticado) {\n      props.history.push('/proyectos');\n    }\n\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    } // eslint-disable-next-line\n\n  }, [mensaje, autenticado, props.history]); // State para iniciar sesión\n\n  const _useState = useState({\n    nombre: '',\n    email: '',\n    password: '',\n    confirmar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        usuario = _useState2[0],\n        guardarUsuario = _useState2[1]; // extraer de usuario\n\n\n  const nombre = usuario.nombre,\n        email = usuario.email,\n        password = usuario.password,\n        confirmar = usuario.confirmar;\n\n  const onChange = e => {\n    guardarUsuario(_objectSpread({}, usuario, {\n      [e.target.name]: e.target.value\n    }));\n  }; // Cuando el usuario quiere iniciar sesión\n\n\n  const onSubmit = e => {\n    e.preventDefault(); // Validar que no haya campos vacios\n\n    if (nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === '') {\n      mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n      return;\n    } // Password minimo de 6 caracteres\n\n\n    if (password.length < 6) {\n      mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\n      return;\n    } // Los 2 passwords son iguales\n\n\n    if (password !== confirmar) {\n      mostrarAlerta('Los passwords no son iguales', 'alerta-error');\n      return;\n    } // Pasarlo al action\n\n\n    registrarUsuario({\n      nombre,\n      email,\n      password\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-usuario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, alerta ? React.createElement(\"div\", {\n    className: \"alerta \".concat(alerta.categoria),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" \", alerta.msg, \" \") : null, React.createElement(\"div\", {\n    className: \"contenedor-form sombra-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Obtener una cuenta\"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Nombre\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"nombre\",\n    name: \"nombre\",\n    placeholder: \"Tu Nombre\",\n    value: nombre,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Tu Email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Tu Password\",\n    value: password,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"confirmar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Confirmar Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"confirmar\",\n    name: \"confirmar\",\n    placeholder: \"Repite tu Password\",\n    value: confirmar,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Registrarme\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(Link, {\n    to: '/',\n    className: \"enlace-cuenta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Volver a Iniciar Sesi\\xF3n\")));\n};\n\nexport default NuevaCuenta;","map":{"version":3,"sources":["C:/Users/federico.r/reduxobservable/fullstack/MERNTask/MERNTASKS-cliente/src/components/auth/NuevaCuenta.js"],"names":["React","useState","useContext","useEffect","Link","AlertaContext","AuthContext","NuevaCuenta","props","alertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","registrarUsuario","history","push","msg","categoria","nombre","email","password","confirmar","usuario","guardarUsuario","onChange","e","target","name","value","onSubmit","preventDefault","trim","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    // extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, autenticado,  registrarUsuario } = authContext;\r\n\r\n    // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history]);\r\n\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar: ''\r\n    });\r\n\r\n    // extraer de usuario\r\n    const { nombre, email, password, confirmar } = usuario;\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar que no haya campos vacios\r\n        if( nombre.trim() === '' || \r\n            email.trim() === '' || \r\n            password.trim() === '' || \r\n            confirmar.trim() === '' ) {\r\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n                return;\r\n            }\r\n\r\n        // Password minimo de 6 caracteres\r\n        if(password.length < 6) {\r\n            mostrarAlerta('El password debe ser de al menos 6 caracteres', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        // Los 2 passwords son iguales\r\n        if(password !== confirmar) {\r\n            mostrarAlerta('Los passwords no son iguales', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        // Pasarlo al action\r\n        registrarUsuario({\r\n            nombre, \r\n            email, \r\n            password\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Obtener una cuenta</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Tu Nombre\"\r\n                            value={nombre}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu Email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"confirmar\"\r\n                            name=\"confirmar\"\r\n                            placeholder=\"Repite tu Password\"\r\n                            value={confirmar}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Registrarme\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                    Volver a Iniciar Sesión\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NuevaCuenta;"]},"metadata":{},"sourceType":"module"}