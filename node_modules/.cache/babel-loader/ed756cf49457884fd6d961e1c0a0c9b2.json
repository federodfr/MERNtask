{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\src\\\\components\\\\proyectos\\\\NuevoProyecto.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n  // Obtener el state del formulario\n  const proyectosContext = useContext(proyectoContext);\n  const formulario = proyectosContext.formulario,\n        errorformulario = proyectosContext.errorformulario,\n        mostrarFormulario = proyectosContext.mostrarFormulario,\n        agregarProyecto = proyectosContext.agregarProyecto,\n        mostrarError = proyectosContext.mostrarError; // State para Proyecto\n\n  const _useState = useState({\n    nombre: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        proyecto = _useState2[0],\n        guardarProyecto = _useState2[1]; // Extraer nombre de proyecto\n\n\n  const nombre = proyecto.nombre; // Lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    guardarProyecto(_objectSpread({}, proyecto, {\n      [e.target.name]: e.target.value\n    }));\n  }; // Cuando el usuario envia un proyecto\n\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); // Validar el proyecto\n\n    if (nombre === '') {\n      mostrarError();\n      return;\n    } // agregar al state\n\n\n    agregarProyecto(proyecto); // Reiniciar el form\n\n    guardarProyecto({\n      nombre: ''\n    });\n  }; // Mostrar el formulario\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: onClickFormulario,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Nuevo Proyecto\"), formulario ? React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitProyecto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Proyecto\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: onChangeProyecto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Proyecto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })) : null, errorformulario ? React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"El nombre del Proyecto es obligatorio\") : null);\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["C:/Users/federico.r/reduxobservable/fullstack/MERNTask/MERNTASKS-cliente/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","nombre","proyecto","guardarProyecto","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAExB;AACA,QAAMC,gBAAgB,GAAGH,UAAU,CAACC,eAAD,CAAnC;AAHwB,QAIhBG,UAJgB,GAImED,gBAJnE,CAIhBC,UAJgB;AAAA,QAIJC,eAJI,GAImEF,gBAJnE,CAIJE,eAJI;AAAA,QAIcC,iBAJd,GAImEH,gBAJnE,CAIcG,iBAJd;AAAA,QAIiCC,eAJjC,GAImEJ,gBAJnE,CAIiCI,eAJjC;AAAA,QAIkDC,YAJlD,GAImEL,gBAJnE,CAIkDK,YAJlD,EAOxB;;AAPwB,oBAQYT,QAAQ,CAAC;AACzCU,IAAAA,MAAM,EAAE;AADiC,GAAD,CARpB;AAAA;AAAA,QAQjBC,QARiB;AAAA,QAQPC,eARO,kBAYxB;;;AAZwB,QAahBF,MAbgB,GAaLC,QAbK,CAahBD,MAbgB,EAexB;;AACA,QAAMG,gBAAgB,GAAGC,CAAC,IAAI;AAC1BF,IAAAA,eAAe,mBACRD,QADQ;AAEX,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFhB,OAAf;AAIH,GALD,CAhBwB,CAuBxB;;;AACA,QAAMC,gBAAgB,GAAGJ,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACK,cAAF,GAD0B,CAG1B;;AACA,QAAGT,MAAM,KAAK,EAAd,EAAkB;AACdD,MAAAA,YAAY;AACZ;AACH,KAPyB,CAS1B;;;AACAD,IAAAA,eAAe,CAACG,QAAD,CAAf,CAV0B,CAY1B;;AACAC,IAAAA,eAAe,CAAC;AACZF,MAAAA,MAAM,EAAE;AADI,KAAD,CAAf;AAGH,GAhBD,CAxBwB,CA0CxB;;;AACA,QAAMU,iBAAiB,GAAG,MAAM;AAC5Bb,IAAAA,iBAAiB;AACpB,GAFD;;AAIA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,OAAO,EAAGa,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAOMf,UAAU,GAEA;AACI,IAAA,SAAS,EAAC,2BADd;AAEI,IAAA,QAAQ,EAAEa,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,KAAK,EAAER,MALX;AAMI,IAAA,QAAQ,EAAEG,gBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAaI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,KAAK,EAAC,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAFA,GAsBJ,IA7BZ,EA+BMP,eAAe,GAAG;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAH,GAA6E,IA/BlG,CADJ;AAmCH,CAlFD;;AAoFA,eAAeH,aAAf","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    // Obtener el state del formulario\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { formulario, errorformulario,  mostrarFormulario, agregarProyecto, mostrarError } = proyectosContext;\r\n\r\n\r\n    // State para Proyecto\r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    // Extraer nombre de proyecto\r\n    const {Â nombre } = proyecto;\r\n\r\n    // Lee los contenidos del input\r\n    const onChangeProyecto = e => {\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // Cuando el usuario envia un proyecto\r\n    const onSubmitProyecto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar el proyecto\r\n        if(nombre === '') {\r\n            mostrarError();\r\n            return;\r\n        }\r\n\r\n        // agregar al state\r\n        agregarProyecto(proyecto)\r\n\r\n        // Reiniciar el form\r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    // Mostrar el formulario\r\n    const onClickFormulario = () => {\r\n        mostrarFormulario();\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <button \r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                onClick={ onClickFormulario }\r\n            >Nuevo Proyecto</button>\r\n\r\n            { formulario ? \r\n                    (\r\n                        <form\r\n                            className=\"formulario-nuevo-proyecto\"\r\n                            onSubmit={onSubmitProyecto}\r\n                        >\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Nombre Proyecto\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChangeProyecto}\r\n                            />\r\n\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-primario btn-block\"\r\n                                value=\"Agregar Proyecto\"\r\n                            />\r\n\r\n                        </form>\r\n                ) : null }\r\n\r\n            { errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>  : null }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;"]},"metadata":{},"sourceType":"module"}