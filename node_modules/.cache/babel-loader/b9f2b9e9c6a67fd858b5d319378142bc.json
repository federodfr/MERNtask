{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\src\\\\components\\\\proyectos\\\\ListadoProyectos.js\";\nimport React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst ListadoProyectos = () => {\n  // Extrar proyectos de state inicial\n  const proyectosContext = useContext(proyectoContext);\n  const mensaje = proyectosContext.mensaje,\n        proyectos = proyectosContext.proyectos,\n        obtenerProyectos = proyectosContext.obtenerProyectos;\n  const alertaContext = useContext(AlertaContext);\n  const alerta = alertaContext.alerta,\n        mostrarAlerta = alertaContext.mostrarAlerta; // Obtener proyectos cuando carga el componente\n\n  useEffect(() => {\n    // si hay un error\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    }\n\n    obtenerProyectos(); // eslint-disable-next-line\n  }, [mensaje]); // revisar si proyectos tiene contenido\n\n  if (proyectos.length === 0) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"No hay proyectos, comienza creando uno\");\n  return React.createElement(\"ul\", {\n    className: \"listado-proyectos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, alerta ? React.createElement(\"div\", {\n    className: \"alerta \".concat(alerta.categoria, \" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, alerta.msg) : null, React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, proyectos.map(proyecto => React.createElement(CSSTransition, {\n    key: proyecto._id,\n    timeout: 200,\n    classNames: \"proyecto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Proyecto, {\n    proyecto: proyecto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })))));\n};\n\nexport default ListadoProyectos;","map":{"version":3,"sources":["C:/Users/federico.r/reduxobservable/fullstack/MERNTask/MERNTASKS-cliente/src/components/proyectos/ListadoProyectos.js"],"names":["React","useContext","useEffect","Proyecto","proyectoContext","AlertaContext","TransitionGroup","CSSTransition","ListadoProyectos","proyectosContext","mensaje","proyectos","obtenerProyectos","alertaContext","alerta","mostrarAlerta","msg","categoria","length","map","proyecto","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE3B;AACA,QAAMC,gBAAgB,GAAGR,UAAU,CAACG,eAAD,CAAnC;AAH2B,QAInBM,OAJmB,GAIsBD,gBAJtB,CAInBC,OAJmB;AAAA,QAIVC,SAJU,GAIsBF,gBAJtB,CAIVE,SAJU;AAAA,QAICC,gBAJD,GAIsBH,gBAJtB,CAICG,gBAJD;AAM3B,QAAMC,aAAa,GAAGZ,UAAU,CAACI,aAAD,CAAhC;AAN2B,QAOnBS,MAPmB,GAOOD,aAPP,CAOnBC,MAPmB;AAAA,QAOXC,aAPW,GAOOF,aAPP,CAOXE,aAPW,EAS3B;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAGQ,OAAH,EAAY;AACRK,MAAAA,aAAa,CAACL,OAAO,CAACM,GAAT,EAAcN,OAAO,CAACO,SAAtB,CAAb;AACH;;AAEDL,IAAAA,gBAAgB,GANJ,CAOZ;AACH,GARQ,EAQN,CAACF,OAAD,CARM,CAAT,CAV2B,CAoB3B;;AACA,MAAGC,SAAS,CAACO,MAAV,KAAqB,CAAxB,EAA4B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAP;AAE5B,SAEI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGMJ,MAAM,GAAO;AAAK,IAAA,SAAS,mBAAYA,MAAM,CAACG,SAAnB,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDH,MAAM,CAACE,GAAvD,CAAP,GAA8E,IAH1F,EAMI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,SAAS,CAACQ,GAAV,CAAcC,QAAQ,IACnB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,QAAQ,CAACC,GADlB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAED,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADH,CADL,CANJ,CAFJ;AAuBH,CA9CD;;AAgDA,eAAeZ,gBAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport { TransitionGroup, CSSTransitionÂ } from 'react-transition-group';\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n    // Extrar proyectos de state inicial\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    // Obtener proyectos cuando carga el componente\r\n    useEffect(() => {\r\n        // si hay un error\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n\r\n        obtenerProyectos();\r\n        // eslint-disable-next-line\r\n    }, [mensaje]);\r\n\r\n    // revisar si proyectos tiene contenido\r\n    if(proyectos.length === 0 ) return <p>No hay proyectos, comienza creando uno</p>;\r\n\r\n    return ( \r\n\r\n        <ul className=\"listado-proyectos\">\r\n            \r\n        \r\n            { alerta   ? ( <div className={`alerta ${alerta.categoria} `}>{alerta.msg}</div>  ) : null  }\r\n\r\n\r\n            <TransitionGroup>\r\n                {proyectos.map(proyecto => (\r\n                    <CSSTransition\r\n                        key={proyecto._id}\r\n                        timeout={200}\r\n                        classNames=\"proyecto\"\r\n                    >\r\n                        <Proyecto \r\n                            proyecto={proyecto}\r\n                        />\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </ul>\r\n     );\r\n}\r\n \r\nexport default ListadoProyectos;"]},"metadata":{},"sourceType":"module"}