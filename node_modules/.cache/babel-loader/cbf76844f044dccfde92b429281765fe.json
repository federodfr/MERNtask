{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\src\\\\components\\\\auth\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = props => {\n  // extraer los valores del context\n  const alertaContext = useContext(AlertaContext);\n  const alerta = alertaContext.alerta,\n        mostrarAlerta = alertaContext.mostrarAlerta;\n  const authContext = useContext(AuthContext);\n  const mensaje = authContext.mensaje,\n        autenticado = authContext.autenticado,\n        iniciarSesion = authContext.iniciarSesion; // En caso de que el password o usuario no exista\n\n  useEffect(() => {\n    if (autenticado) {\n      props.history.push('/proyectos');\n    }\n\n    if (mensaje) {\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\n    } // eslint-disable-next-line\n\n  }, [mensaje, autenticado, props.history]); // State para iniciar sesión\n\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        usuario = _useState2[0],\n        guardarUsuario = _useState2[1]; // extraer de usuario\n\n\n  const email = usuario.email,\n        password = usuario.password;\n\n  const onChange = e => {\n    guardarUsuario(_objectSpread({}, usuario, {\n      [e.target.name]: e.target.value\n    }));\n  }; // Cuando el usuario quiere iniciar sesión\n\n\n  const onSubmit = e => {\n    e.preventDefault(); // Validar que no haya campos vacios\n\n    if (email.trim() === '' || password.trim() === '') {\n      mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n    } // Pasarlo al action\n\n\n    iniciarSesion({\n      email,\n      password\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-usuario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, alerta ? React.createElement(\"div\", {\n    className: \"alerta \".concat(alerta.categoria),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" \", alerta.msg, \" \") : null, React.createElement(\"div\", {\n    className: \"contenedor-form sombra-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Iniciar Sesi\\xF3n\"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Tu Email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Tu Password\",\n    value: password,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"campo-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Iniciar Sesi\\xF3n\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))), React.createElement(Link, {\n    to: '/nueva-cuenta',\n    className: \"enlace-cuenta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Obtener Cuenta\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/federico.r/reduxobservable/fullstack/MERNTask/MERNTASKS-cliente/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","Link","AlertaContext","AuthContext","Login","props","alertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSesion","history","push","msg","categoria","email","password","usuario","guardarUsuario","onChange","e","target","name","value","onSubmit","preventDefault","trim"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n\r\n    // extraer los valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { mensaje, autenticado, iniciarSesion } = authContext;\r\n\r\n      // En caso de que el password o usuario no exista\r\n      useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado, props.history]);\r\n\r\n    // State para iniciar sesión\r\n    const [usuario, guardarUsuario] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    // extraer de usuario\r\n    const { email, password } = usuario;\r\n\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // Cuando el usuario quiere iniciar sesión\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar que no haya campos vacios\r\n        if(email.trim() === '' || password.trim() === '') {\r\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n        }\r\n\r\n        // Pasarlo al action\r\n        iniciarSesion({ email, password });\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"form-usuario\">\r\n            { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n\r\n                <form\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu Email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Iniciar Sesión\" />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\r\n                    Obtener Cuenta\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;"]},"metadata":{},"sourceType":"module"}