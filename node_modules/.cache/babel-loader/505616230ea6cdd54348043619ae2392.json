{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\src\\\\components\\\\tareas\\\\Tarea.js\";\nimport React, { useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Tarea = ({\n  tarea\n}) => {\n  // Extrar si un proyecto esta activo\n  const proyectosContext = useContext(proyectoContext);\n  const proyecto = proyectosContext.proyecto; // obtener la función del context de tarea\n\n  const tareasContext = useContext(tareaContext);\n  const eliminarTarea = tareasContext.eliminarTarea,\n        obtenerTareas = tareasContext.obtenerTareas,\n        actualizarTarea = tareasContext.actualizarTarea,\n        guardarTareaActual = tareasContext.guardarTareaActual; // Extraer el proyecto\n\n  const _proyecto = _slicedToArray(proyecto, 1),\n        proyectoActual = _proyecto[0]; // Función que se ejecuta cuando el usuario presiona el btn de eliminar tarea\n\n\n  const tareaEliminar = id => {\n    eliminarTarea(id, proyectoActual._id);\n    obtenerTareas(proyectoActual.id);\n  }; // Función que modifica el estado de las tareas\n\n\n  const cambiarEstado = tarea => {\n    if (tarea.estado) {\n      tarea.estado = false;\n    } else {\n      tarea.estado = true;\n    }\n\n    actualizarTarea(tarea);\n  }; // Agrega una tarea actual cuando el usuario desea editarla\n\n\n  const seleccionarTarea = tarea => {\n    guardarTareaActual(tarea);\n  };\n\n  return React.createElement(\"li\", {\n    className: \"tarea sombra\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, tarea.nombre, \" \"), React.createElement(\"div\", {\n    className: \"estado\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, tarea.estado ? React.createElement(\"button\", {\n    type: \"button\",\n    className: \"completo\",\n    onClick: () => cambiarEstado(tarea),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Completo\") : React.createElement(\"button\", {\n    type: \"button\",\n    className: \"incompleto\",\n    onClick: () => cambiarEstado(tarea),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Incompleto\")), React.createElement(\"div\", {\n    className: \"acciones\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primario\",\n    onClick: () => seleccionarTarea(tarea),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Editar\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secundario\",\n    onClick: () => tareaEliminar(tarea._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Eliminar\")));\n};\n\nexport default Tarea;","map":{"version":3,"sources":["C:/Users/federico.r/reduxobservable/fullstack/MERNTask/MERNTASKS-cliente/src/components/tareas/Tarea.js"],"names":["React","useContext","proyectoContext","tareaContext","Tarea","tarea","proyectosContext","proyecto","tareasContext","eliminarTarea","obtenerTareas","actualizarTarea","guardarTareaActual","proyectoActual","tareaEliminar","id","_id","cambiarEstado","estado","seleccionarTarea","nombre"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAEvB;AACA,QAAMC,gBAAgB,GAAGL,UAAU,CAACC,eAAD,CAAnC;AAHuB,QAIfK,QAJe,GAIFD,gBAJE,CAIfC,QAJe,EAMvB;;AACA,QAAMC,aAAa,GAAGP,UAAU,CAACE,YAAD,CAAhC;AAPuB,QAQfM,aARe,GAQuDD,aARvD,CAQfC,aARe;AAAA,QAQAC,aARA,GAQuDF,aARvD,CAQAE,aARA;AAAA,QAQeC,eARf,GAQuDH,aARvD,CAQeG,eARf;AAAA,QAQgCC,kBARhC,GAQuDJ,aARvD,CAQgCI,kBARhC,EAWvB;;AAXuB,mCAYEL,QAZF;AAAA,QAYhBM,cAZgB,iBAcvB;;;AACA,QAAMC,aAAa,GAAGC,EAAE,IAAI;AACxBN,IAAAA,aAAa,CAACM,EAAD,EAAKF,cAAc,CAACG,GAApB,CAAb;AACAN,IAAAA,aAAa,CAACG,cAAc,CAACE,EAAhB,CAAb;AACH,GAHD,CAfuB,CAoBvB;;;AACA,QAAME,aAAa,GAAGZ,KAAK,IAAI;AAC3B,QAAGA,KAAK,CAACa,MAAT,EAAiB;AACbb,MAAAA,KAAK,CAACa,MAAN,GAAe,KAAf;AACH,KAFD,MAEO;AACHb,MAAAA,KAAK,CAACa,MAAN,GAAe,IAAf;AACH;;AACDP,IAAAA,eAAe,CAACN,KAAD,CAAf;AACH,GAPD,CArBuB,CA8BvB;;;AACA,QAAMc,gBAAgB,GAAGd,KAAK,IAAI;AAC9BO,IAAAA,kBAAkB,CAACP,KAAD,CAAlB;AACH,GAFD;;AAIA,SACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACe,MAAV,MADJ,EAGI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,CAACa,MAAN,GAGO;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,UAFd;AAGI,IAAA,OAAO,EAAE,MAAMD,aAAa,CAACZ,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHP,GAWO;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,OAAO,EAAE,MAAMY,aAAa,CAACZ,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZZ,CAHJ,EAwBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,kBAFd;AAGI,IAAA,OAAO,EAAE,MAAMc,gBAAgB,CAACd,KAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,oBAFd;AAGI,IAAA,OAAO,EAAE,MAAMS,aAAa,CAACT,KAAK,CAACW,GAAP,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CAxBJ,CADJ;AAwCH,CA3ED;;AA6EA,eAAeZ,KAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    // Extrar si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    // obtener la función del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\r\n\r\n\r\n    // Extraer el proyecto\r\n    const [proyectoActual] = proyecto;\r\n \r\n    // Función que se ejecuta cuando el usuario presiona el btn de eliminar tarea\r\n    const tareaEliminar = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual.id)\r\n    }\r\n\r\n    // Función que modifica el estado de las tareas\r\n    const cambiarEstado = tarea => {\r\n        if(tarea.estado) {\r\n            tarea.estado = false;\r\n        } else {\r\n            tarea.estado = true\r\n        }\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    // Agrega una tarea actual cuando el usuario desea editarla\r\n    const seleccionarTarea = tarea => {\r\n        guardarTareaActual(tarea);\r\n    }\r\n\r\n    return ( \r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre} </p>\r\n\r\n            <div className=\"estado\">\r\n                {tarea.estado \r\n                ?  \r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"completo\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                        >Completo</button>\r\n                    )\r\n                : \r\n                    (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"incompleto\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                        >Incompleto</button>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            <div className=\"acciones\">\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={() => seleccionarTarea(tarea) }\r\n                >Editar</button>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={() => tareaEliminar(tarea._id)}\r\n                >Eliminar</button>\r\n            </div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Tarea;"]},"metadata":{},"sourceType":"module"}