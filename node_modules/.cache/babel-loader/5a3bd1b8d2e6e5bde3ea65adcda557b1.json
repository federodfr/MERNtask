{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\federico.r\\\\reduxobservable\\\\fullstack\\\\MERNTask\\\\MERNTASKS-cliente\\\\src\\\\context\\\\tareas\\\\tareaState.js\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n  const initialState = {\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; // Crear dispatch y state\n\n  const _useReducer = useReducer(TareaReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Crear las funciones\n  // Obtener las tareas de un proyecto\n\n\n  const obtenerTareas = async proyecto => {\n    console.log(proyecto);\n\n    try {\n      const resultado = await clienteAxios.get('/api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      console.log(resultado);\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar una tarea al proyecto seleccionado\n\n\n  const agregarTarea = async tarea => {\n    console.log(tarea);\n\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea);\n      console.log(resultado);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Valida y muestra un error en caso de que sea necesario\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; // Eliminar tarea por id\n\n\n  const eliminarTarea = async (id, proyecto) => {\n    try {\n      await clienteAxios.delete(\"/api/tareas/\".concat(id), {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Edita o modifica una tarea\n\n\n  const actualizarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.put(\"/api/tareas/\".concat(tarea._id), tarea);\n      dispatch({\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Extrae una tarea para edición\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; // Elimina la tareaseleccionada\n\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return React.createElement(TareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      agregarTarea,\n      validarTarea,\n      eliminarTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["C:/Users/federico.r/reduxobservable/fullstack/MERNTask/MERNTASKS-cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","console","log","resultado","get","params","type","payload","data","tareas","error","agregarTarea","tarea","post","validarTarea","eliminarTarea","id","delete","actualizarTarea","put","_id","guardarTareaActual","limpiarTarea","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,YALJ,EAMIC,gBANJ,EAOIC,aAPJ,QAQO,aARP;AAUA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,cAAc,EAAE,EADC;AAEjBC,IAAAA,UAAU,EAAE,KAFK;AAGjBC,IAAAA,iBAAiB,EAAE;AAHF,GAArB,CADwB,CAOxB;;AAPwB,sBAQEhB,UAAU,CAACE,YAAD,EAAeW,YAAf,CARZ;AAAA;AAAA,QAQjBI,KARiB;AAAA,QAQVC,QARU,oBAUxB;AAEA;;;AACA,QAAMC,aAAa,GAAG,MAAMC,QAAN,IAAkB;AAEpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,QAAI;AACA,YAAMG,SAAS,GAAG,MAAMb,YAAY,CAACc,GAAb,CAAiB,aAAjB,EAAgC;AAAEC,QAAAA,MAAM,EAAE;AAAEL,UAAAA;AAAF;AAAV,OAAhC,CAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAL,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEvB,eADD;AAELwB,QAAAA,OAAO,EAAEJ,SAAS,CAACK,IAAV,CAAeC;AAFnB,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH;AACJ,GAdD,CAbwB,CA6BxB;;;AACA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCX,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AACA,QAAI;AACA,YAAMT,SAAS,GAAG,MAAMb,YAAY,CAACuB,IAAb,CAAkB,aAAlB,EAAiCD,KAAjC,CAAxB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAL,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEtB,aADD;AAELuB,QAAAA,OAAO,EAAEK;AAFJ,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOF,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH;AACJ,GAZD,CA9BwB,CA4CxB;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACvBhB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAErB;AADD,KAAD,CAAR;AAGH,GAJD,CA7CwB,CAmDxB;;;AACA,QAAM8B,aAAa,GAAG,OAAOC,EAAP,EAAWhB,QAAX,KAAwB;AAC1C,QAAI;AACA,YAAMV,YAAY,CAAC2B,MAAb,uBAAmCD,EAAnC,GAAyC;AAAEX,QAAAA,MAAM,EAAE;AAAEL,UAAAA;AAAF;AAAV,OAAzC,CAAN;AACAF,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEpB,cADD;AAELqB,QAAAA,OAAO,EAAES;AAFJ,OAAD,CAAR;AAIH,KAND,CAME,OAAON,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH;AACJ,GAVD,CApDwB,CAgExB;;;AACA,QAAMQ,eAAe,GAAG,MAAMN,KAAN,IAAe;AAEnC,QAAI;AACA,YAAMT,SAAS,GAAG,MAAMb,YAAY,CAAC6B,GAAb,uBAAgCP,KAAK,CAACQ,GAAtC,GAA6CR,KAA7C,CAAxB;AAEAd,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAElB,gBADD;AAELmB,QAAAA,OAAO,EAAEJ,SAAS,CAACK,IAAV,CAAeI;AAFnB,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOF,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH;AACJ,GAZD,CAjEwB,CA+ExB;;;AACA,QAAMW,kBAAkB,GAAGT,KAAK,IAAI;AAChCd,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEnB,YADD;AAELoB,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAIH,GALD,CAhFwB,CAyFxB;;;AACA,QAAMU,YAAY,GAAG,MAAM;AACvBxB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,cAAc,EAAGG,KAAK,CAACH,cADpB;AAEHC,MAAAA,UAAU,EAAEE,KAAK,CAACF,UAFf;AAGHC,MAAAA,iBAAiB,EAAEC,KAAK,CAACD,iBAHtB;AAIHG,MAAAA,aAJG;AAKHY,MAAAA,YALG;AAMHG,MAAAA,YANG;AAOHC,MAAAA,aAPG;AAQHM,MAAAA,kBARG;AASHH,MAAAA,eATG;AAUHI,MAAAA;AAVG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcK9B,KAAK,CAAC+B,QAdX,CADJ;AAkBH,CAlHD;;AAoHA,eAAehC,UAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\n\r\nimport { \r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types';\r\n\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TareaState = props => {\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n    }\r\n\r\n    // Crear dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    // Crear las funciones\r\n\r\n    // Obtener las tareas de un proyecto\r\n    const obtenerTareas = async proyecto => {\r\n\r\n        console.log(proyecto);\r\n\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto }});\r\n            console.log(resultado);\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Agregar una tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea => {\r\n        console.log(tarea);\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n            console.log(resultado);\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Valida y muestra un error en caso de que sea necesario\r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n\r\n    // Eliminar tarea por id\r\n    const eliminarTarea = async (id, proyecto) => {\r\n        try {\r\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto }});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Edita o modifica una tarea\r\n    const actualizarTarea = async tarea => {\r\n\r\n        try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n            \r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Extrae una tarea para edición\r\n    const guardarTareaActual = tarea => {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // Elimina la tareaseleccionada\r\n    const limpiarTarea = () => {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasproyecto : state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}